#env variables
env.SQUARE_API_KEY = ${SQUARE_API_KEY}

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/product_management
spring.datasource.username=root
spring.datasource.password=root

# DISABLE IN PRODUCTION (REMOVE BELOW 2 AS DEFAULT IF FALSE)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
##spring.jpa.properties.hibernate.hbm2ddl =create
#hibernate.hbm2ddl.auto = create-only



# JWT Configuration
#jwt.secret=your_secret_key
#jwt.expirationMs=3600000  # JWT token expiration time in milliseconds (e.g., 1 hour)
#jwt.header=Authorization
#jwt.tokenPrefix=Bearer
#
## Spring Security Configuration
## Disable CSRF (Cross-Site Request Forgery) protection for simplicity in this example.
## You should configure CSRF protection appropriately for your application.
#spring.security.enabled=false
#
## Enable basic authentication for the /api/authenticate endpoint
## (You can customize your security rules as needed)
#spring.security.filter-order=1
#spring.security.filter-chain-order=1
#spring.security.user.name=user
#spring.security.user.password=password
#spring.security.user.roles=USER

# Logging Configuration (Optional)
# Configure log levels for different packages/classes
logging.level.org.springframework=INFO
#logging.level.com.emarket=DEBUG
